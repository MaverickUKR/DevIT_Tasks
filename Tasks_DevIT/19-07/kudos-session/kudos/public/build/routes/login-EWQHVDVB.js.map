{
  "version": 3,
  "sources": ["empty-module:../components/utils/validators.server", "../../../app/routes/login.tsx", "../../../app/components/form-field.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1721576616621.799\";\n}\n// REMIX HMR END\n\n// app/routes/login.tsx\nimport { useState } from \"react\";\nimport { Layout } from \"../components/layout\";\nimport { FormField } from \"../components/form-field\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { validateEmail, validateName, validatePassword } from \"../components/utils/validators.server\";\nimport { useActionData } from \"@remix-run/react\";\nimport { useRef, useEffect } from \"react\";\nimport { login, register, getUser } from \"../components/utils/auth.server\";\nexport const loader = async ({\n  request\n}) => {\n  // If there's already a user in the session, redirect to the home page\n  return (await getUser(request)) ? redirect(\"/\") : null;\n};\nexport const action = async ({\n  request\n}) => {\n  const form = await request.formData();\n  const action = form.get(\"_action\");\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  let firstName = form.get(\"firstName\");\n  let lastName = form.get(\"lastName\");\n  if (typeof action !== \"string\" || typeof email !== \"string\" || typeof password !== \"string\") {\n    return json({\n      error: `Invalid Form Data`,\n      form: action\n    }, {\n      status: 400\n    });\n  }\n  if (action === \"register\" && (typeof firstName !== \"string\" || typeof lastName !== \"string\")) {\n    return json({\n      error: `Invalid Form Data`,\n      form: action\n    }, {\n      status: 400\n    });\n  }\n  const errors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n    ...(action === \"register\" ? {\n      firstName: validateName(firstName || \"\"),\n      lastName: validateName(lastName || \"\")\n    } : {})\n  };\n  if (Object.values(errors).some(Boolean)) return json({\n    errors,\n    fields: {\n      email,\n      password,\n      firstName,\n      lastName\n    },\n    form: action\n  }, {\n    status: 400\n  });\n  switch (action) {\n    case \"login\":\n      {\n        return await login({\n          email,\n          password\n        });\n      }\n    case \"register\":\n      {\n        firstName = firstName;\n        lastName = lastName;\n        return await register({\n          email,\n          password,\n          firstName,\n          lastName\n        });\n      }\n    default:\n      return json({\n        error: `Invalid Form Data`\n      }, {\n        status: 400\n      });\n  }\n};\nexport default function Login() {\n  _s();\n  const [action, setAction] = useState(\"login\");\n  const actionData = useActionData();\n  const firstLoad = useRef(true);\n  const [errors, setErrors] = useState(actionData?.errors || {});\n  const [formError, setFormError] = useState(actionData?.error || \"\");\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || \"\",\n    password: actionData?.fields?.password || \"\",\n    firstName: actionData?.fields?.firstName || \"\",\n    lastName: actionData?.fields?.lastName || \"\"\n  });\n\n  // Updates the form data when an input changes\n  const handleInputChange = (event, field) => {\n    setFormData(form => ({\n      ...form,\n      [field]: event.target.value\n    }));\n  };\n  useEffect(() => {\n    if (!firstLoad.current) {\n      const newState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n      };\n      setErrors(newState);\n      setFormError(\"\");\n      setFormData(newState);\n    }\n  }, [action]);\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\");\n    }\n  }, [formData]);\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n  return <Layout>\n      <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\n        <button onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")} className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">\n          Welcome to Kudos!\n        </h2>\n        <p className=\"font-semibold text-slate-300\">\n          {action === \"login\" ? \"Log In To Give Some Praise!\" : \"Sign Up To Get Started!\"}\n        </p>\n\n        <form method=\"POST\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\n          <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n            {formError}\n          </div>\n          <FormField htmlFor=\"email\" label=\"Email\" value={formData.email} onChange={e => handleInputChange(e, \"email\")} error={errors?.email} />\n          <FormField htmlFor=\"password\" type=\"password\" label=\"Password\" value={formData.password} onChange={e => handleInputChange(e, \"password\")} error={errors?.password} />\n          {action === \"register\" && <>\n              <FormField htmlFor=\"firstName\" label=\"First Name\" onChange={e => handleInputChange(e, \"firstName\")} value={formData.firstName} error={errors?.firstName} />\n              <FormField htmlFor=\"lastName\" label=\"Last Name\" onChange={e => handleInputChange(e, \"lastName\")} value={formData.lastName} error={errors?.lastName} />\n            </>}\n          <div className=\"w-full text-center\">\n            <button type=\"submit\" name=\"_action\" value={action} className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n              {action === \"login\" ? \"Sign In\" : \"Sign Up\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Layout>;\n}\n_s(Login, \"/lBWLY8M/nJtODVr5riEPKQZTlk=\", false, function () {\n  return [useActionData];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/form-field.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/form-field.tsx\");\n  import.meta.hot.lastModified = \"1721574222780.108\";\n}\n// REMIX HMR END\n\n// app/components/form-field.tsx\n\nimport { useEffect, useState } from \"react\";\nexport function FormField({\n  htmlFor,\n  label,\n  type = \"text\",\n  value,\n  onChange = () => {},\n  error = \"\"\n}) {\n  _s();\n  const [errorText, setErrorText] = useState(error);\n  useEffect(() => {\n    setErrorText(error);\n  }, [error]);\n  return <>\n      <label htmlFor={htmlFor} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <input onChange={e => {\n      onChange(e);\n      setErrorText(\"\");\n    }} type={type} id={htmlFor} name={htmlFor} className=\"w-full p-2 rounded-xl my-2\" value={value} />\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n        {errorText || \"\"}\n      </div>\n    </>;\n}\n_s(FormField, \"uOYBLtFYhSL+iiVZVnYWVm7OeCY=\");\n_c = FormField;\nvar _c;\n$RefreshReg$(_c, \"FormField\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
