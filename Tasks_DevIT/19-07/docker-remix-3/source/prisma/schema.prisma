// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// // Определение модели User
// model User {
//   id       Int      @id @default(autoincrement())
//   email    String   @unique
//   name     String?
//   password String
//   age      Int?
//   image    String?
//   favorite Boolean?
//   address  Json?
//   profile  Profile?
//   posts    Post[]
// }

// // Определение модели Post
// model Post {
//   id     Int    @id @default(autoincrement())
//   title  String
//   body   String
//   userId Int
//   user   User   @relation(fields: [userId], references: [id])
// }

// // https://www.prisma.io/blog/fullstack-remix-prisma-mongodb-2-ZTmOy58p4re8
// model Profile {
//   id        Int    @id @default(autoincrement())
//   firstName String
//   lastName  String
//   userId    Int    @unique
//   user      User   @relation(fields: [userId], references: [id])
// }
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Определение модели User
model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  password String
  age      Int?
  image    String?
  favorite Boolean?
  address  Json?
  profile  Profile?
  posts    Post[]
}

// Определение модели Post
model Post {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  tags      String[]
  reactions Json
}

// https://www.prisma.io/blog/fullstack-remix-prisma-mongodb-2-ZTmOy58p4re8
model Profile {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  userId    Int    @unique
  user      User   @relation(fields: [userId], references: [id])
}
